#include <iostream>

const int M = 3; // Количество строк
const int N = 3; // Количество столбцов

void zeroRowAndColumn(int matrix[M][N], int t, int p) {
    // Проверка наличия элемента равного нулю в ячейке (t, p)
    if (matrix[t][p] == 0) {
        // Обнуление столбца p
        for (int i = 0; i < M; i++) {
            matrix[i][p] = 0;
        }

        // Обнуление строки t
        for (int j = 0; j < N; j++) {
            matrix[t][j] = 0;
        }
    }
}

int main() {
    setlocale(LC_ALL, "Russian");
    int matrix[M][N] = { {1, 2, 3}, {4, 0, 6}, {7, 8, 9} };
    int t = 1; // Строка t
    int p = 1; // Столбец p

    std::cout << "До:" << std::endl;
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }


    // Обнуление столбца p и строки t, если элемент равен нулю
    zeroRowAndColumn(matrix, t, p);

    std::cout << "После:" << std::endl;
    // Вывод обновленной матрицы в консоль
    for (int i = 0; i < M; i++) {
        for (int j = 0; j < N; j++) {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}

/*
+---------------------+
| Начало программы    |
+---------------------+
          |
          V
+---------------------+
| Инициализация       |
| переменных          |
+---------------------+
          |
          V
+---------------------+
| Установка начальных  |
| значений row и col   |
+---------------------+
          |
          V
+---------------------+
| Пока row < ROWS и    |
| col >= 0             |
+---------------------+
          |
          V
+---------------------+
| Если matrix[row][col]|
| равно target,       |
| вернуть true        |
+---------------------+
          |
          V
+---------------------+
| Если matrix[row][col]|
| больше target,      |
| уменьшить col       |
+---------------------+
          |
          V
+---------------------+
| Иначе                |
| увеличить row        |
+---------------------+
          |
          V
+---------------------+
| Вернуть false       |
+---------------------+
          |
          V
+---------------------+
| Конец программы      |
+---------------------+
*/
